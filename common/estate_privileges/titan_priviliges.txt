#estate_church_new_prophets = {
#	icon = privilege_recruit_minister
#	influence = 0.10
#
#	is_valid = {
#		OR = {
#			religion = buddhism
#			religion = vajrayana
#			religion = mahayana
#			religion_group = muslim
#		}
#	}
#
#	conditional_modifier = {
#		trigger = {
#			has_dlc = "Common Sense"
#			OR = {
#				religion = buddhism
#				religion = vajrayana
#				religion = mahayana
#			}
#		}
#		modifier = {
#			monthly_karma = -0.05
#		}
#	}
#	conditional_modifier = {
#		trigger = {
#			has_dlc = "Cradle of Civilization"
#			religion_group = muslim
#		}
#		modifier = {
#			monthly_piety = -0.002
#		}
#	}
#	penalties = {
#	}
#	benefits = {
#	}
#	ai_will_do = {
#		factor = 10
#		modifier = {
#			factor = 0.25
#			NOT = { has_estate_privilege = estate_church_religious_state }
#			num_of_estate_privileges = {
#				estate = estate_church
#				value = 3
#			}
#		}
#	}
#}

estate_burghers_mountain_development = {
	icon = privilege_make_generous_donation
	loyalty = 0.1
	influence = 0.1
	is_valid = {
		OR = {
			mission_completed = tm_emp_swi_production_centres
			tag = SWI
			was_tag = SWI
			tag = CAU
			was_tag = CAU
			tag = PER
			was_tag = PER
		}
	}
	can_select = {
		OR = {
			mission_completed = tm_emp_swi_production_centres			
			tag = SWI
			was_tag = SWI
			tag = CAU
			was_tag = CAU
			tag = PER
			was_tag = PER
		}
	}
	on_granted = {
		custom_tooltip = swiss_development_mechanic
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_terrain = mountain
				}
				add_province_modifier = {
					name = estate_burghers_mountain_development_mod
					duration = -1
				}
			}
		}
	}
	on_revoked = {
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_burghers_mountain_development_mod
				}
				remove_province_modifier = estate_burghers_mountain_development_mod
			}
		}
	}
	on_invalid = {
		hidden_effect = {
			every_owned_province = {
				limit = {
					has_province_modifier = estate_burghers_mountain_development_mod
				}
				remove_province_modifier = estate_burghers_mountain_development_mod
			}
		}
	}
	penalties = {
	}
	ai_will_do = {
		factor = 5
	}
}

estate_burghers_encourage_production = {
	icon = privilege_give_money
	#
	influence = 0.1
	is_valid = {
		NOT = { has_estate = estate_vaisyas }
	}
	modifier_by_land_ownership = {
		land_maintenance_modifier = 0.10
		production_efficiency = 0.50
	}
	penalties = {
	}
	ai_will_do = {
		factor = 5
		modifier = {
			factor = 2
			estate_territory = {
				estate = estate_burghers
				territory = 50
			}
		}
		modifier = {
			factor = 1.5
			estate_territory = {
				estate = estate_burghers
				territory = 40
			}
		}
		modifier = {
			factor = 1.5
			estate_territory = {
				estate = estate_burghers
				territory = 30
			}
		}
		modifier = {
			factor = 0.5
			NOT = {
				estate_territory = {
					estate = estate_burghers
					territory = 15
				}
			}
		}
		modifier = {
			factor = 0.5
			NOT = {
				estate_territory = {
					estate = estate_burghers
					territory = 10
				}
			}
		}
		modifier = {
			factor = 0.5
			NOT = {
				estate_territory = {
					estate = estate_burghers
					territory = 5
				}
			}
		}
		modifier = {
			factor = 0.25
			NOT = { has_estate_privilege = estate_burghers_land_of_commerce }
			num_of_estate_privileges = {
				estate = estate_burghers
				value = 3
			}
		}
	}
}

estate_jains_encourage_production = {
	icon = privilege_give_money
	#
	influence = 0.1
	is_valid = {
		NOT = { has_estate = estate_vaisyas }
	}
	modifier_by_land_ownership = {
		land_maintenance_modifier = 0.10
		production_efficiency = 0.50
	}
	penalties = {
	}
	ai_will_do = {
		factor = 5
		modifier = {
			factor = 2
			estate_territory = {
				estate = estate_jains
				territory = 50
			}
		}
		modifier = {
			factor = 1.5
			estate_territory = {
				estate = estate_jains
				territory = 40
			}
		}
		modifier = {
			factor = 1.5
			estate_territory = {
				estate = estate_jains
				territory = 30
			}
		}
		modifier = {
			factor = 0.5
			NOT = {
				estate_territory = {
					estate = estate_jains
					territory = 15
				}
			}
		}
		modifier = {
			factor = 0.5
			NOT = {
				estate_territory = {
					estate = estate_jains
					territory = 10
				}
			}
		}
		modifier = {
			factor = 0.5
			NOT = {
				estate_territory = {
					estate = estate_jains
					territory = 5
				}
			}
		}
		modifier = {
			factor = 0.25
			NOT = { has_estate_privilege = estate_jains_diplomacy }
			num_of_estate_privileges = {
				estate = estate_jains
				value = 3
			}
		}
	}
}

estate_burghers_desert_development = {
	icon = privilege_dev_cost
	loyalty = 0.1
	influence = 0.1
	can_select = {
		has_country_flag = can_dev_desert_cheap
	}
	on_granted = {
		custom_tooltip = develop_desert_cheaper_tt
	}
	is_valid = {
		has_country_flag = can_dev_desert_cheap
	}
	on_granted_province = {
		if = {
			limit = { has_terrain = desert }
			add_province_modifier = {
				name = estate_burghers_desert_dev_desert
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_burghers_desert_dev_desert
			}
			remove_province_modifier = estate_burghers_desert_dev_desert
		}
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_burghers_desert_dev_desert
			}
			remove_province_modifier = estate_burghers_desert_dev_desert
		}
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_burghers_desert_dev_desert
			}
			remove_province_modifier = estate_burghers_desert_dev_desert
		}
	}
	penalties = {
	}
	ai_will_do = {
		factor = 5
	}
}

estate_nobles_monopoly_of_deer = {
	icon = privilege_monopoly_of_goods_deer
	#
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = deer
		}
	}
	can_select = {
		num_of_cities = 2
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			NOT = { has_disaster = french_revolution }
			NOT = {
				has_disaster_progress = {
					disaster = french_revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		if = {
			limit = {
				deer = 1
			}
			add_mercantilism = 1
		}
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = deer
			}
			custom_tooltip = MONOPOLY_INCOME_DEER_DESC
		}
		custom_tooltip = estate_nobles_monopoly_of_deer_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = deer
			}
			add_province_modifier = {
				name = estate_nobles_monopoly_of_deer_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_nobles_monopoly_of_deer_mod
			}
			remove_province_modifier = estate_nobles_monopoly_of_deer_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_nobles_monopoly_of_deer_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_monopoly_of_deer_mod
			}
			remove_province_modifier = estate_nobles_monopoly_of_deer_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_nobles_monopoly_of_deer_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_monopoly_of_deer_mod
			}
			remove_province_modifier = estate_nobles_monopoly_of_deer_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.13 }
	}
	ai_will_do = { #having the AI use these could lead to an unstoppable downwards spiral if it can't work out how to get rid of them
		factor = 5
		modifier = {
			factor = 0
			OR = {
				#has_estate_privilege = estate_burghers_monopoly_of_textiles
				has_estate_privilege = estate_burghers_monopoly_of_dyes
				has_estate_privilege = estate_burghers_monopoly_of_glass
				has_estate_privilege = estate_burghers_monopoly_of_paper
			}
		}
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.5
			num_of_loans = 1
		}
		modifier = {
			factor = 0.75
			adm_tech = 11
		}
		modifier = {
			factor = 0.5
			production_income_percentage = 0.25
		} 
	}
}

estate_nobles_monopoly_of_horses = {
	icon = privilege_monopoly_of_goods_horses
	#
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = horses
		}
	}
	can_select = {
		num_of_cities = 2
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			NOT = { has_disaster = french_revolution }
			NOT = {
				has_disaster_progress = {
					disaster = french_revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		if = {
			limit = {
				horses = 1
			}
			add_mercantilism = 1
		}
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = horses
			}
			custom_tooltip = MONOPOLY_INCOME_HORSES_DESC
		}
		custom_tooltip = estate_nobles_monopoly_of_horses_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = horses
			}
			add_province_modifier = {
				name = estate_nobles_monopoly_of_horses_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_nobles_monopoly_of_horses_mod
			}
			remove_province_modifier = estate_nobles_monopoly_of_horses_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_nobles_monopoly_of_horses_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_monopoly_of_horses_mod
			}
			remove_province_modifier = estate_nobles_monopoly_of_horses_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_nobles_monopoly_of_horses_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_monopoly_of_horses_mod
			}
			remove_province_modifier = estate_nobles_monopoly_of_horses_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.14 }
	}
	ai_will_do = { #having the AI use these could lead to an unstoppable downwards spiral if it can't work out how to get rid of them
		factor = 5
		modifier = {
			factor = 0
			OR = {
				#has_estate_privilege = estate_burghers_monopoly_of_textiles
				has_estate_privilege = estate_burghers_monopoly_of_dyes
				has_estate_privilege = estate_burghers_monopoly_of_glass
				has_estate_privilege = estate_burghers_monopoly_of_paper
			}
		}
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.5
			num_of_loans = 1
		}
		modifier = {
			factor = 0.75
			adm_tech = 11
		}
		modifier = {
			factor = 0.5
			production_income_percentage = 0.25
		} 
	}
}

estate_burghers_monopoly_of_olives = {
	icon = privilege_monopoly_of_goods_olives
	#
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			OR = {
				trade_goods = olives
				trade_goods = olive_oil
			}
		}
	}
	can_select = {
		num_of_cities = 2
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			NOT = { has_disaster = french_revolution }
			NOT = {
				has_disaster_progress = {
					disaster = french_revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		if = {
			limit = {
				OR = {
					olives = 1
					olive_oil = 1
				}
			}
			add_mercantilism = 1
		}
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				OR = {
					trade_goods = olives
					trade_goods = olive_oil
				}
			}
			custom_tooltip = MONOPOLY_INCOME_OLIVES_DESC
		}
		custom_tooltip = estate_burghers_monopoly_of_olives_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					trade_goods = olives
					trade_goods = olive_oil
				}
			}
			add_province_modifier = {
				name = estate_burghers_monopoly_of_olives_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_burghers_monopoly_of_olives_mod
			}
			remove_province_modifier = estate_burghers_monopoly_of_olives_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_burghers_monopoly_of_olives_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_burghers_monopoly_of_olives_mod
			}
			remove_province_modifier = estate_burghers_monopoly_of_olives_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_burghers_monopoly_of_olives_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_burghers_monopoly_of_olives_mod
			}
			remove_province_modifier = estate_burghers_monopoly_of_olives_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.12 }
	}
	ai_will_do = { #having the AI use these could lead to an unstoppable downwards spiral if it can't work out how to get rid of them
		factor = 5
		modifier = {
			factor = 0
			OR = {
				#has_estate_privilege = estate_burghers_monopoly_of_textiles
				has_estate_privilege = estate_burghers_monopoly_of_dyes
				has_estate_privilege = estate_burghers_monopoly_of_glass
				has_estate_privilege = estate_burghers_monopoly_of_paper
			}
		}
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.5
			num_of_loans = 1
		}
		modifier = {
			factor = 0.75
			adm_tech = 11
		}
		modifier = {
			factor = 0.5
			production_income_percentage = 0.25
		} 
	}
}

estate_cossacks_grant_lordships = {
	icon = privilege_grant_autonomy
	land_share = 5
	#
	loyalty = 0.10
	influence = 0.15
	is_valid = {
		has_country_flag = tm_COS_extra_privlege
	}
	can_select = {
		NOT = {
			has_estate_privilege = estate_cossacks_grant_generalships
		}
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		global_tax_modifier = 0.1
		interest = -0.5
		inflation_reduction = -0.05
		governing_capacity = 250
	}
	ai_will_do = {
		factor = 5
		
	}
}

estate_cossacks_grant_generalships = {
	icon = privilege_grant_autonomy
	land_share = 5
	#
	loyalty = 0.10
	influence = 0.15
	is_valid = {
		has_country_flag = tm_COS_extra_privlege
	}
	can_select = {
		NOT = {
			has_estate_privilege = estate_cossacks_grant_lordships
		}
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		land_forcelimit_modifier = 0.1
		cavalry_shock = 0.25
		movement_speed = 0.05
	}
	ai_will_do = {
		factor = 5
		
	}
}

estate_jains_commercial_board_of_advice = {
	icon = privilege_recruit_minister
	#max_absolutism = -5
	#conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.05
	loyalty = 0.05
	penalties = {
		stability_cost_modifier = 0.1
	}
	benefits = {
		dip_advisor_cost = -0.10
	}
	conditional_modifier = {
		trigger = { has_country_flag = no_stab_cost_for_dip_advisor }
		modifier = { stability_cost_modifier = -0.1 }
	}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = russian_modernization_mechanic }
	#	modifier = { monthly_russian_modernization = -0.03 }
	#}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = ottoman_decadence_mechanic }
	#	modifier = { monthly_ottoman_decadence = 0.02 }
	#}
	ai_will_do = {
		factor = 15
		modifier = {
			factor = 1.25
			NOT = { dip = 2 }
		}
		modifier = {
			factor = 0.8
			dip = 5
		}
	}
}

sedentary_subjects_development_of_cities = {
	icon = privilege_development_efficiency
	loyalty = 0.05
	influence = 0.05
	#max_absolutism = -5
	#conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	is_valid = {
		has_dlc = "Domination"
	}
	on_granted = {
		custom_tooltip = estate_sedentary_subjects_development_of_cities_gt
		tooltip = {
			add_province_modifier = {
				name = estate_sedentary_subjects_development_of_cities_mod
				duration = -1
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_sedentary_subjects_development_of_cities_rt
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					province_has_center_of_trade_of_level = 1
					has_river_estuary_trigger = yes
				}
			}
			add_province_modifier = {
				name = estate_sedentary_subjects_development_of_cities_mod
				duration = -1
			}
		}
	}
	on_invalid_province = {
		if = {
			limit = { has_province_modifier = estate_sedentary_subjects_development_of_cities_mod }
			remove_province_modifier = estate_sedentary_subjects_development_of_cities_mod
		}
	}
	on_revoked_province = {
		if = {
			limit = { has_province_modifier = estate_sedentary_subjects_development_of_cities_mod }
			remove_province_modifier = estate_sedentary_subjects_development_of_cities_mod
		}
	}

	mechanics = {
		no_estate_crownland_loss_from_developing
	}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = russian_modernization_mechanic }
	#	modifier = { monthly_russian_modernization = -0.03 }
	#}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = ottoman_decadence_mechanic }
	#	modifier = { monthly_ottoman_decadence = 0.02 }
	#}
	ai_will_do = {
		factor = 0
	}
}

estate_nomadic_aristocracy_development_of_roads = {
	icon = privilege_grant_autonomy
	loyalty = 0.1
	influence = 0.10
	#max_absolutism = -5
	#conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	is_valid = {
		has_dlc = "Domination"
	}
	on_granted = {
		custom_tooltip = estate_nomadic_aristocracy_development_of_roads_gt
		tooltip = {
			add_province_modifier = {
				name = estate_nomadic_aristocracy_development_of_roads_mod
				duration = -1
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_nomadic_aristocracy_development_of_roads_rt
	}
	on_granted_province = {
		if = {
			limit = {
				has_road_building = yes
			}
			add_province_modifier = {
				name = estate_nomadic_aristocracy_development_of_roads_mod
				duration = -1
			}
		}
	}
	on_invalid_province = {
		if = {
			limit = { has_province_modifier = estate_nomadic_aristocracy_development_of_roads_mod }
			remove_province_modifier = estate_nomadic_aristocracy_development_of_roads_mod
		}
	}
	on_revoked_province = {
		if = {
			limit = { has_province_modifier = estate_nomadic_aristocracy_development_of_roads_mod }
			remove_province_modifier = estate_nomadic_aristocracy_development_of_roads_mod
		}
	}

	mechanics = {
		no_estate_crownland_loss_from_developing
	}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = russian_modernization_mechanic }
	#	modifier = { monthly_russian_modernization = -0.05 }
	#}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = ottoman_decadence_mechanic }
	#	modifier = { monthly_ottoman_decadence = 0.02 }
	#}
	ai_will_do = {
		factor = 0
	}
}